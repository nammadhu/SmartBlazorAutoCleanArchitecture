@page "/products"
@using BlazorAuto.Shared.Services
@using SharedResponse
@using global::Shared.DTOs
@using global::Shared.Features.Products.Commands
@using global::Shared.Features.Products.Queries
@inject IProduct productService

<h3>Product List</h3>

@if (products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.Name</td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => EditProduct(product.Id)">Edit</button>
                        <button class="btn btn-danger" @onclick="() => DeleteProduct(product.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Parameter]
    public List<ProductDto>? products { get; set; }

    protected override async Task OnInitializedAsync()
    {
        products??= (await productService.GetPagedListProductNoCache(new GetPagedListProductQuery() { PageNumber = 1, PageSize = 10 })).Data;
    }

    private async Task EditProduct(long id)
    {
        await productService.UpdateProduct(new UpdateProductCommand() { Id = id });
    }

    private async Task DeleteProduct(long id)
    {
        await productService.DeleteProduct(new DeleteProductCommand() {Id=id });
        products = (await productService.GetPagedListProductNoCache(new GetPagedListProductQuery() { PageNumber = 1, PageSize = 10 })).Data;
    }
}
